name: Automatic Tagging

on:
  push:
    branches:
      - main

jobs:
  release:
    name: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 現在の最新タグを取得
        id: cur_tag_var
        run: |
          git fetch --prune --unshallow
          echo "$(git tag --sort=creatordate | tail -n 1)" > CUR_TAG
          echo ::set-output name=cur_tag::$(cat CUR_TAG)

      - name: リリースタグを設定
        id: set_release_tag
        run: |
          echo "${{ steps.cur_tag_var.outputs.cur_tag }}"
          # タグが存在しない場合、初期リリースとしてv1.0.0.0をセット
          if [[ "${{ steps.cur_tag_var.outputs.cur_tags }}" == '' ]]; then
            NEW_TAG="v1.0.0.0"
            echo "Initial release: $NEW_TAG"
            echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
            exit 0
          fi

          echo "コール"
          # タグからバージョン部分を取得して分割
          IFS='.' read -ra VERSION <<< "${LATEST_TAG#v}"

          # バージョンを数値として取得
          MAJOR="${VERSION[0]}"
          MINOR="${VERSION[1]}"
          PATCH1="${VERSION[2]}"
          PATCH2="${VERSION[3]}"

          # パッチバージョンをインクリメント
          PATCH2=$((PATCH2 + 1))
          # 繰り上がりの処理
          if (( PATCH2 > 9 )); then
            PATCH2=0
            PATCH1=$((PATCH1 + 1))
            if (( PATCH1 > 9 )); then
              PATCH1=0
              MINOR=$((MINOR + 1))
              if (( MINOR > 9 )); then
                MINOR=0
                MAJOR=$((MAJOR + 1))
              fi
            fi
          fi
          # 新しいタグを生成
          NEW_TAG="v$MAJOR.$MINOR.$PATCH1.$PATCH2"
          echo "New tag: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENVs
